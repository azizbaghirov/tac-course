resource "aws_instance" "worker" {
  ami           = "ami-0aa8fc2422063977a"
  instance_type = "t2.micro"
  network_interface {
    network_interface_id = aws_network_interface.ip-worker.id
    device_index         = 0
  }

  user_data = file("userdata/worker.sh")

  tags = {
    Name = "worker-node"
  }
}

resource "aws_instance" "master" {
  ami           = "ami-0aa8fc2422063977a"
  instance_type = "t2.micro"
  network_interface {
    network_interface_id = aws_network_interface.ip-master.id
    device_index         = 0
  }
  key_name = "aws_key"
  #  vpc_security_group_ids = [
  #    aws_security_group.sg_ssh.id,
  #  ]

  depends_on = [
    aws_instance.worker
  ]

  user_data = file("userdata/master.sh")

  tags = {
    Name = "master-node"
  }
}

resource "aws_key_pair" "deployer" {
  key_name   = "aws_key"
  public_key = "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIO/8R1TIb/J+1/vdnZododnTspqcOzhef2RoGWQB8xTf aziz@terraform-pc"
}

resource "aws_security_group" "sg_ssh" {
#  vpc_id = aws_vpc.my_vpc.id

  ingress {
    cidr_blocks = ["0.0.0.0/0"]
    protocol    = "tcp"
    from_port   = 22
    to_port     = 22
  }

  egress {
    cidr_blocks = ["0.0.0.0/0"]
    protocol    = "-1"
    from_port   = 0
    to_port     = 0
  }
}

# resource "aws_vpc" "my_vpc" {
#  cidr_block = "172.16.0.0/16"
#
#  tags = {
#    Name = "tf-example"
#  }
# }

resource "aws_subnet" "my_subnet" {
  #  vpc_id            = aws_vpc.my_vpc.id
  cidr_block        = "172.16.10.0/24"
  availability_zone = "us-east-2a"

  tags = {
    Name = "tf-example"
  }
}

resource "aws_network_interface" "ip-master" {
  subnet_id   = aws_subnet.my_subnet.id
  private_ips = ["172.16.10.100"]

  security_groups = [aws_security_group.sg_ssh.id]

  tags = {
    Name = "primary_network_interface"
  }
}

resource "aws_network_interface" "ip-worker" {
  subnet_id   = aws_subnet.my_subnet.id
  private_ips = ["172.16.10.101"]

  tags = {
    Name = "primary_network_interface2"
  }
}
